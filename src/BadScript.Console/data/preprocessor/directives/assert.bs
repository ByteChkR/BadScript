#macro ASSERT_DEFINED(VAR)
{
	if(!Collection.HasKey(__SELF, "VAR"))
	{
		Environment.Error("Assertion Failed. VAR is not Defined")
	}
}

#macro ASSERT_INTERFACE_AVAILABLE(NAME)
{
	if(!Environment.HasInterface("NAME"))
	{
		Environment.Error("Assertion Failed. Interface NAME is not available")
	}
}

#macro ASSERT_EQUALS(LEFT, RIGHT)
{
	if(LEFT != RIGHT)
	{
		Environment.Error("Assertion Failed. left is not equal to right. Actual Left: '" + LEFT + "' Actual Right: '" + RIGHT + "'")
	}
}

#macro ASSERT_NULL(VAR)
{
	if(VAR != null)
	{
		Environment.Error("Assertion Failed. var is not NULL. Actual Value: " + VAR)
	}
}

#macro ASSERT_NOT_NULL(VAR)
{
	if(VAR == null)
	{
		Environment.Error("Assertion Failed. var is NULL.")
	}
}

#macro ASSERT_BOOL(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsBoolean(VAR))
	{
		Environment.Error("Assertion Failed. var is not a boolean. Actual Value: " + VAR)
	}
}

#macro ASSERT_TRUE(VAR)
{
	#ASSERT_BOOL(VAR)
	if(!VAR)
	{
		Environment.Error("Assertion Failed. var is not true. Actual Value: " + VAR)
	}
}
#macro ASSERT_FALSE(VAR)
{
	#ASSERT_BOOL(VAR)
	if(!VAR)
	{
		Environment.Error("Assertion Failed. var is not true. Actual Value: " + VAR)
	}
}

#macro ASSERT_STRING(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsString(VAR))
	{
		Environment.Error("Assertion Failed. var is not a string. Actual Value: " + VAR)
	}
}

#macro ASSERT_NUMBER(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsNumber(VAR))
	{
		Environment.Error("Assertion Failed. var is not a number. Actual Value: " + VAR)
	}
}

#macro ASSERT_ARRAY(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsArray(VAR))
	{
		Environment.Error("Assertion Failed. var is not an Array. Actual Value: " + VAR)
	}
}

#macro ASSERT_TABLE(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsTable(VAR))
	{
		Environment.Error("Assertion Failed. var is not a Table. Actual Value: " + VAR)
	}
}

#macro ASSERT_TYPE(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsType(VAR))
	{
		Environment.Error("Assertion Failed. var is not a Type. Actual Value: " + VAR)
	}
}

#macro ASSERT_INSTANCE_OF(NAME, VAR)
{
	#ASSERT_TYPE(VAR)
	if(!VAR.IsInstanceOf("NAME"))
	{
		Environment.Error("Assertion Failed. var is not an Instance of NAME. Actual Value: " + VAR.GetType())
	}
}

#macro ASSERT_FUNCTION(VAR)
{
	#ASSERT_NOT_NULL(VAR)
	if(!Convert.IsFunction(VAR))
	{
		Environment.Error("Assertion Failed. var is not a Type. Actual Value: " + VAR)
	}
}

#macro ASSERT_EXISTS(FILE)
{
	#ASSERT_STRING(FILE)
	#LOAD_INTERFACE(FileSystem)

	if(!FileSystem.Exists(FILE))
	{
		Environment.Error("Assertion Failed. The file does not exist.")
	}
}