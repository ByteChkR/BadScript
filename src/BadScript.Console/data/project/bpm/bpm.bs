Environment.LoadInterface("Path")
Environment.LoadInterface("String")
Environment.LoadInterface("FileSystem")
Environment.LoadInterface("Http")
Environment.LoadInterface("Json")


repoPath = "bpm_modules"
repoOrigin = "https://byt3.dev/BadScript/bpm/"

FileSystem.CreateDir(repoPath)

function Resolve()
{
	moduleName = String.Remove(args[1], 0, String.Length("bpm://"))
	modulePath = Path.Combine(repoPath, moduleName, moduleName + ".bs")

	Console.WriteLine(modulePath)

	if(!FileSystem.Exists(modulePath))
	{
		Environment.Error($"Can not find module '{args[1]}'")
	}

}

function Fetch()
{
	indexUrl = Path.Combine(repoOrigin, "index.json")
	Console.WriteLine("Downloading Index")
	index = Json.FromJson(Http.DownloadString(indexUrl))
	foreach (name, url) in index
	{
		localDir = Path.Combine(repoPath, name)
		FileSystem.CreateDir(localDir)
		local = Path.Combine(localDir, name+".bs")
		if(FileSystem.Exists(local))
		{
			FileSystem.Delete(local)
		}
		Console.WriteLine($"Downloading '{name}': '{url}'")
		Http.DownloadFile(url, local)
	}
	//Connect to Module Mirror
	//	Download all Required References
}


if(args[0] == "resolve")
{
	Resolve()
}
else if(args[0] == "fetch")
{
	Fetch()	
}