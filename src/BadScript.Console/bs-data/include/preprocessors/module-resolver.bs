string = environment.loadInterface("string")

function generateModuleLoadExpression(module)
{
	return string.format("{0} = modules.require(\"{0}\")", module)
}

function findEnd(source, idx)
{
	tempSrc = string.remove(source, 0, idx)
	newLIndex = string.indexOf(tempSrc, "\n")
	if(newLIndex == -1)
	{
		return string.length(source) - 1
	}
	return newLIndex
}

function parseModuleName(line)
{
	return string.trim(string.replace(line, "#module", ""))
}


function moduleResolver(source)
{
	nextIdx = string.indexOf(source, "#module")
	while(nextIdx != -1)
	{
		endIdx = findEnd(source, nextIdx)
		line = string.substr(source, nextIdx, endIdx)
		name = parseModuleName(line)
		expr = generateModuleLoadExpression(name)
		source = string.replace(source, line, expr)
		nextIdx = string.indexOf(source, "#module")
	}
	return source
}

return {
	name = "module-resolver",
	preprocess = moduleResolver
}
