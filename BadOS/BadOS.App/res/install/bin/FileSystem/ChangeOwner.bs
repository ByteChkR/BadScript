FileSystem = Extensions.GetExtension(ProcessInfo.GetUser(), "BadOS.Extensions.FileSystem")
Logger = Extensions.GetExtension(ProcessInfo.GetUser(), "BadOS.Extensions.Logging").CreateLogger("RUN_AS")
args = ProcessInfo.GetArguments()
args.RemoveAt(0)

function ParseFlags()
{
	t = {
		Recursive = false,
		Public = false
	}
	for i = 0 while< args.Size()
	{
		arg = args[i]
		if(	arg == "--recursive" ||
			arg == "-r")
		{
			t.Recursive = true
			args.RemoveAt(i)
			i -= 1
		}
		else if(arg == "--public" ||
				arg == "-p")
		{
			t.Public = true
			args.RemoveAt(i)
			i -= 1
		}
	}
	return t
}

flags = ParseFlags()

foreach arg in args
{
	dir = arg
	dir = ProcessInfo.ResolvePath(dir)
	if(FileSystem.Exists(FileSystem.GetRootNode(), dir))
	{
		node = FileSystem.FindNode(FileSystem.GetRootNode(), dir)
		if(flags.Public)
		{
			node.ChangePublic(ProcessInfo.GetUser(), flags.Recursive)
		}
		else
		{
			node.ChangeOwner(ProcessInfo.GetUser(), ProcessInfo.GetUser(), flags.Recursive)
		}
	}
	else
	{
		Logger.Error($"Node {arg} does not exist")
	}
}