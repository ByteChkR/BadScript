
namespace BadOS.Extensions.FileSystem
{


	class File : FileSystemNode
	{
		function IsFile() => return true

		function ToString()
		{
			return GetDebugString(this)
		}
		function ReadAllText(!user)
		{
			if(user.GetUID() == GetOwnerUID())
			{
				if(user.HasRight("BadOS.Extensions.FileSystem.Read.Own"))
				{
					fs = GetFileSystem()
					return fs.ReadAllText(fs.ResolveNode(this))
				}
				else
				{
					_Logger.Error($"Access Forbidden {GetFullName()}")
					return null
				}
			}
			else if(GetOwnerUID() == -1 || user.HasRight("BadOS.Extensions.FileSystem.Read.All"))
			{
				fs = GetFileSystem()
				return fs.ReadAllText(fs.ResolveNode(this))
			}
			else
			{
				_Logger.Error($"Access Forbidden {GetFullName()}")
				return null
			}
		}

		function ReadAllLines(!user)
		{
			if(user.GetUID() == GetOwnerUID())
			{
				if(user.HasRight("BadOS.Extensions.FileSystem.Read.Own"))
				{
					fs = GetFileSystem()
					return fs.ReadAllLines(fs.ResolveNode(this))
				}
				else
				{
					_Logger.Error($"Access Forbidden {GetFullName()}")
					return null
				}
			}
			else if(GetOwnerUID() == -1 || user.HasRight("BadOS.Extensions.FileSystem.Read.All"))
			{
				fs = GetFileSystem()
				return fs.ReadAllLines(fs.ResolveNode(this))
			}
			else
			{
				_Logger.Error($"Access Forbidden {GetFullName()}")
				return null
			}
		}

		function WriteAllText(!user, !text)
		{
			#ASSERT_STRING(text)
			if(user.GetUID() == GetOwnerUID())
			{
				if(user.HasRight("BadOS.Extensions.FileSystem.Write.Own"))
				{
					fs = GetFileSystem()
					return fs.WriteAllText(fs.ResolveNode(this), text)
				}
				else
				{
					_Logger.Error($"Access Forbidden {GetFullName()}")
					return null
				}

			}
			else if(user.HasRight("BadOS.Extensions.FileSystem.Write.All"))
			{
				fs = GetFileSystem()
				return fs.WriteAllText(fs.ResolveNode(this), text)
			}
			else
			{
				_Logger.Error($"Access Forbidden {GetFullName()}")
				return null
			}
		}

		function WriteAllLines(!user, !lines)
		{
			#ASSERT_ARRAY(lines)
			if(user.GetUID() == GetOwnerUID())
			{
				if(user.HasRight("BadOS.Extensions.FileSystem.Write.Own"))
				{
					fs = GetFileSystem()
					return fs.WriteAllLines(fs.ResolveNode(this), lines)
				}
				else
				{
					_Logger.Error($"Access Forbidden {GetFullName()}")
					return null
				}
			}
			else if(user.HasRight("BadOS.Extensions.FileSystem.Write.All"))
			{
				fs = GetFileSystem()
				return fs.WriteAllLines(fs.ResolveNode(this), lines)
			}
			else
			{
				_Logger.Error($"Access Forbidden {GetFullName()}")
				return null
			}
		}

		function Open(!user)
		{
			if(user.GetUID() == GetOwnerUID())
			{
				if(	user.HasRight("BadOS.Extensions.FileSystem.Write.Own") &&
					user.HasRight("BadOS.Extensions.FileSystem.Read.Own"))
				{

					relativeNode = GetFileSystemLink()
					fs = relativeNode.GetFileSystem()
					return fs.Open(fs.ResolveNode(relativeNode, this))

				}
				else
				{
					_Logger.Error($"Access Forbidden {GetFullName()}")
					return null
				}
			}
			else if(user.HasRight("BadOS.Extensions.FileSystem.Write.All") &&
					user.HasRight("BadOS.Extensions.FileSystem.Read.All"))
			{
				fs = GetFileSystem()
				return fs.WriteAllLines(fs.ResolveNode(this), lines)
			}
			else
			{
				_Logger.Error($"Access Forbidden {GetFullName()}")
				return null
			}
		}

		function ReadJson(!user)
		{
			return Json.FromJson(ReadAllText(user))
		}
		function WriteJson(!user, !obj)
		{
			WriteAllText(user, Json.ToJson(obj))
		}

	}
}