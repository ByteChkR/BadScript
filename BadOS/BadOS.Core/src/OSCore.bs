namespace BadOS.Core
{
	
	class OSCore
	{
		_ExtensionHost = null
		_EventSystem = null
		_MachineName = "MACHINE"
		function OSCore()
		{
			_EventSystem = new EventSystem()
			_ExtensionHost = new ExtensionHost(_EventSystem)
		}
		function GetExtensionHost()
		{
			return _ExtensionHost
		}
		function GetEventSystem()
		{
			return _EventSystem.GetPublicApi()
		}
		function SendInitializationFinished()
		{
			return _ExtensionHost.SendInitializationFinished()
		}

		function GetMachineName()
		{
			return _MachineName
		}

		function SetMachineName(!name)
		{
			#ASSERT_STRING(name)
			_MachineName = name
		}

		function GetPublicApi()
		{
			t = {
				GetEventSystem = GetEventSystem,
				GetMachineName = GetMachineName,
				SetMachineName = SetMachineName
			}
			
			Collection.Lock(t)
			return t
		}

		function Run()
		{
			shutdown = false
			function Shutdown(!ev) => shutdown = true
			handler = new OnShutdownHandler(Shutdown)
			_EventSystem.AddHandler(handler)
			
			while(!shutdown)
			{
				_EventSystem.ProcessEvents()
				_EventSystem.SendEvent(new OnUpdateEvent())
				Environment.Sleep(100)
			}

			_ExtensionHost.OnShutdown()

		}
	}
}