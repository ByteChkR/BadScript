
//Check if the File System API is existent.
//Otherwise it is not possible to load data from disk
function checkFS()
{
	if(fs != null)
	{
		return 1
	}
	else
	{
		print("No File System API Found")
		return 0
	}
}

//Load a Script file and return its global table after execution
global function loadFile(!file)
{
	if(checkFS())
	{
		if(fs.exists(file) && fs.isFile(file))
		{
			f = fs.open(file)
			src = f.readAll()
			f.close()
			return loadString(src)
		}
		else
		{
			print("Unable to Load File: " + file)
		}
	}
}

//Load all Scripts from the specified folder
function loadPlugins(!dir)
{
	pluginList = {}
	if(checkFS())
	{
		if(fs.exists(dir) && fs.isDir(dir))
		{
			files = fs.getFiles(dir, "*.bs", 0)
			fileCount = size(files)
			while(fileCount)
			{
				fileCount = fileCount - 1
				key = path.getFileNameWithoutExtension(files[fileCount])

				print("Loading Plugin: " + key)
			 	pluginList[key] = loadFile(files[fileCount])
			}
		}
		else
		{
			print("Unable to find directory: "+ dir)
		}
	}

	return pluginList
}
//Load Plugins and put resulting table of plugins into the global scope
__G.loadedPlugins = loadPlugins("./plugins")

//debug(<obj>) returns a string representation of an object
//	Note: This makes use of an internal function to get as much information as possible
print("Global Table: \n" + debug(__G))