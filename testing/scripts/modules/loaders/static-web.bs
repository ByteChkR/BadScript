//Load Required Interfaces
environment.loadInterface("fs")
environment.loadInterface("http")
environment.loadInterface("string")

//Loader Table Root
loader = {}

//Returns the URL of the index file that is used to find all modules in this repository
function getModuleIndexUrl(!repoDir) => return path.combine(repoDir, "index.json")

//Loads the Module Index
function loadModuleIndex(!repoDir)
{
	write("Loading Module Index... ")
	indexUrl = getModuleIndexUrl(repoDir)
	response = http.get(indexUrl)
	if(response.status == 200)
	{
		obj = json.fromJson(response.body)
		print("DONE")
		return obj
	}
	print("FAILED")
	error(string.format("Could not reach Repository(response code: {0})", response.status))
}

//Returns true if the repository contains the requested module name
loader.has = function(!repoDir, !name)
{
	index = loadModuleIndex(repoDir)
	foreach module in index
	{
		if(module == name)
		{
			return 1
		}
	}
	return 0
}

//Returns the source of the specified module
loader.get = function(!repoDir, !name)
{
	remotePath = path.combine(repoDir, name, name + ".bs")	
	src = http.downloadString(remotePath)
	return src
}

return loader