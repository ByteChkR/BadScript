namespace ConsoleManagement
{
	Environment.LoadInterface("Path")
	Environment.LoadInterface("FileSystem")
	class ConsoleManager
	{

		function GetDataPath() => return Path.Combine(Path.GetAppPath(), "data")
		function GetIncludePath() => return Path.Combine(GetDataPath(), "include")
		function Copy(!fileToAdd, !outDir)
		{
			#ASSERT_STRING(fileToAdd)
			#ASSERT_STRING(outDir)
			if(!FileSystem.Exists(fileToAdd))
			{
				Console.WriteLine("File '" + fileToAdd + "' can not be found.")
			}
			else
			{
				outFile = Path.Combine(outDir, Path.GetFileName(fileToAdd))
				FileSystem.Copy(fileToAdd, outFile)
			}
		}
		function AddInclude(!fileToAdd)
		{
			Copy(fileToAdd, GetIncludePath())
		}

		function GetPreprocessorPath() => return Path.Combine(GetDataPath(), "preprocessor")
		function GetPreprocessorIncludePath() => return Path.Combine(GetPreprocessorPath(), "include")
		function AddPreprocessorInclude(!fileToAdd)
		{
			Copy(fileToAdd, GetPreprocessorIncludePath())
		}
		function GetPreprocessorDirectivePath() => return Path.Combine(GetPreprocessorPath(), "directives")
		function AddPreprocessorDirective(!fileToAdd)
		{
			Copy(fileToAdd, GetPreprocessorDirectivePath())
		}

	}
}