namespace AppTools
{
	class AppContext
	{
		_contextSettings = null
		_firstStart = false
		_isNewVersion = false
		_lastVersion = null
		function AppContext()
		{
			_contextSettings = App.Manifest.Settings.FindCategory("libs.AppTools.AppContext", true)
			_contextSettings.SetPersistent()

			if(_contextSettings.HasSetting("LastVersion"))
			{
				lastVersion = _contextSettings.GetSetting("LastVersion")
				lastVersion.IsPersistent = true
				_lastVersion = lastVersion.Value
				_isNewVersion = lastVersion.Value != App.Manifest.Version
			}
			else
			{				
				_lastVersion = App.Manifest.Version
			}
			SetLastVersion()


			firstStart = _contextSettings.GetSetting("FirstStart", "true")
			firstStart.IsPersistent = true
			
			_firstStart = firstStart.Value == "true"

			firstStart.Value = "false"

			if(_firstStart)
			{
				firstVersion = _contextSettings.GetSetting("FirstVersion", App.Manifest.Version)
				firstVersion.IsPersistent = true
			}
		}

		function SetLastVersion()
		{
			lastVersion = _contextSettings.GetSetting("LastVersion", App.Manifest.Version)
			lastVersion.IsPersistent = true
			lastVersion.Value = App.Manifest.Version
		}

		function GetFirstVersion()
		{
			return _contextSettings.GetSetting("FirstVersion").Value
		}

		function IsFirstStart()
		{
			return _firstStart
		}
		function IsNewVersion()
		{
			return _isNewVersion
		}

		function GetLastVersion()
		{
			return _lastVersion
		}

		function GetCurrentVersion()
		{
			return App.Manifest.Version
		}

		function ResetFirstStart()
		{
			firstStart = _contextSettings.GetSetting("FirstStart", "true")
			firstStart.IsPersistent = true
			firstStart.Value = "true"
		}
	}
}